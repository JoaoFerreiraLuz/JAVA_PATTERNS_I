"O padrão Strategy sugere que você pegue uma classe que faça algo específico de muitas maneiras diferentes e extraia todos
esses algoritmos em classes separadas chamadas estratégias .

 A classe original, chamada context , deve ter um campo para armazenar uma referência a uma das estratégias. O contexto delega
 o trabalho a um objeto de estratégia vinculado em vez de executá-lo por conta própria.

 O contexto não é responsável por selecionar um algoritmo apropriado para o trabalho. Em vez disso, o cliente passa a estratégia
 desejada para o contexto. Na verdade, o contexto não sabe muito sobre estratégias. Funciona com todas as estratégias através da mesma interface genérica, que expõe apenas um único método para acionar o algoritmo encapsulado dentro da estratégia selecionada.

 Desta forma o contexto torna-se independente das estratégias concretas, podendo adicionar novos algoritmos ou modificar os
 existentes sem alterar o código do contexto ou outras estratégias."
  -- https://refactoring.guru/design-patterns/strategy --
